name: Build & Test

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.10", "3.9", "3.8", "3.7"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install coverage
          pip install -e ".[release, odoo, test, docs, copier]"
      - name: Test with pytest and generate coverage report
        run: |
          coverage run --source . -m pytest -vv --tb=long
          coverage xml --omit="tests/*" -o coverage.xml

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          pip install coverage
          pip install -e ".[release, odoo, test, docs, copier]"
      - name: Test with pytest and generate coverage report
        run: |
          coverage run --source . -m pytest -vv --tb=long
          coverage xml --omit="tests/*" -o coverage.xml
      - name: Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml

  test-no-optional-deps:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.10", "3.9", "3.8", "3.7"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install pytest
      - name: Install
        run: |
          pip install -e .
      - name: Test with pytest
        run: |
          pytest -vv --tb=long
      - name: Run
        run: |
          hitchhiker --help
          hitchhiker --version
          hitchhiker modules list

  type-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.10", "3.9", "3.8", "3.7"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install -e ".[release, odoo, test, docs, copier]"
      - name: Type check with mypy
        run: mypy --install-types --non-interactive ./hitchhiker --strict --no-warn-unused-ignores

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.10", "3.9", "3.8"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install -e ".[release, odoo, test, docs, copier]"
      - name: Lint
        run: make lint
